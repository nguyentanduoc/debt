{"version":3,"sources":["service/AxiosInstance.js","service/MemberService.js","component/debt/FormCreate.js","component/debt/FormPay.js","view/Home.js","view/Member.js","view/Statistical.js","App.js","serviceWorker.js","constants/action-types.js","store/reducer/index.js","store/index.js","index.js"],"names":["Axios","create","baseURL","timeout","data","a","AxoisInstance","post","get","idMember","price","idHistory","delete","idDebt","getAgency","statisticalSearch","condition","id","Option","Select","FormCreate","handleSubmit","e","preventDefault","props","form","validateFields","err","values","createDebt","then","response","onClose","catch","error","console","log","getFieldDecorator","this","title","visible","showModel","onOk","onCancel","Item","rules","required","message","style","width","showSearch","placeholder","optionFilterProp","onSearch","filterOption","input","option","children","toLowerCase","indexOf","members","map","member","key","value","fullName","formatter","replace","parser","Component","FormCreateCreate","Form","connect","state","FormPay","cashBack","FormPayCreate","Column","Table","RangePicker","DatePicker","Home","agencies","debts","rest","totalDebt","totalHistory","historiesTotal","modalPay","flgPrint","setState","loadDebt","onCloseModal","showModalPay","onCloseModalPay","handleDeleteHistory","deleteHistory","handleDeleteDebt","deleteDebt","onChangeAgency","getMemberOf","beforPrint","afterPrint","getListDebt","margin","span","layout","onSubmit","onChange","format","type","icon","htmlType","trigger","content","componentRef","onClick","marginRight","gutter","className","dataSource","rowKey","bordered","pagination","dataIndex","render","createDate","moment","displayType","thousandSeparator","text","record","length","onConfirm","date","size","textAlign","display","ref","el","Member","createMember","createUser","loadMember","getAllMember","columns","color","handleDelete","deleteMember","prefix","valuePropName","initialValue","Statistical","totalRest","Header","Layout","Content","App","collapsed","current","toggle","loading","handleClick","height","background","paddingLeft","selectedKeys","mode","to","fallback","exact","path","name","React","Boolean","window","location","hostname","match","ADD_ARTICLE","initialState","articles","rootReducer","action","Object","assign","concat","payload","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb73700e.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nexport default Axios.create({\r\n  baseURL: 'http://localhost:8090/api',\r\n  timeout: 1000\r\n});","import AxoisInstance from './AxiosInstance';\r\n\r\nexport async function createUser(data) {\r\n  try {\r\n    return await AxoisInstance.post(\"/member/add-member\", data);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function getAllMember() {\r\n  try {\r\n    return await await AxoisInstance.get(\"/member/find-all\");\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function createDebt(data) {\r\n  try {\r\n    return await AxoisInstance.post(\"/debt/add-debt\", data);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function getListDebt(data) {\r\n  try {\r\n    return await AxoisInstance.post(\"/debt/search\", data);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function cashBack(idMember, price) {\r\n  try {\r\n    return await AxoisInstance.get(`/history/cash-back/${idMember}/${price}`);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function deleteHistory(idHistory) {\r\n  try {\r\n    return await AxoisInstance.delete(`/history/${idHistory}`);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function deleteDebt(idDebt) {\r\n  try {\r\n    return await AxoisInstance.delete(`/debt/${idDebt}`);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function getAgency() {\r\n  try {\r\n    return await AxoisInstance.get(`/member/get-agency`);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function getMemberOf(idMember) {\r\n  try {\r\n    return await AxoisInstance.get(`/member/get-member-of/${idMember}`);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\nexport async function statisticalSearch(condition) {\r\n  try {\r\n    return await AxoisInstance.post('/statistical/search', condition);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\nexport async function deleteMember(id) {\r\n  try {\r\n    return await AxoisInstance.delete(`/member/${id}`);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Form, Input, InputNumber, Modal, Select} from \"antd\";\r\nimport {createDebt} from '../../service/MemberService';\r\n\r\nconst Option = Select.Option;\r\n\r\nclass FormCreate extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        createDebt(values)\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.props.onClose()\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Form>\r\n        <Modal\r\n          title=\"Lấy Hàng\"\r\n          visible={this.props.showModel}\r\n          onOk={this.handleSubmit}\r\n          onCancel={this.props.onClose}>\r\n          <Form.Item>\r\n            {getFieldDecorator('idMember', {\r\n              rules: [{required: true, message: 'Chọn Thành viên'}],\r\n            })(\r\n              <Select\r\n                style={{width: '100%'}}\r\n                showSearch\r\n                placeholder=\"Chọn thành viên\"\r\n                optionFilterProp=\"children\"\r\n                onSearch={this.onSearch}\r\n                filterOption={(input, option) =>\r\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }>\r\n                {this.props.members && this.props.members.map(member => (\r\n                  <Option key={member.id} value={member.id}>{member.fullName}</Option>\r\n                ))\r\n                }\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('price', {\r\n              rules: [{required: true, message: 'Nhập số'}],\r\n            })(\r\n              <InputNumber\r\n                style={{width: '100%'}}\r\n                placeholder=\"Số tiền\"\r\n                formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}/>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('note')(\r\n              <Input placeholder=\"Ghi chú\"/>\r\n            )}\r\n          </Form.Item>\r\n        </Modal>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nconst FormCreateCreate = Form.create()(FormCreate);\r\nexport default connect(\r\n  mapStateToProps,\r\n)(FormCreateCreate);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Form, InputNumber, Modal, Select} from \"antd\";\r\nimport {cashBack} from '../../service/MemberService';\r\n\r\nconst Option = Select.Option;\r\n\r\nclass FormPay extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        cashBack(values.idMember, values.price)\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.props.onClose()\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Form>\r\n        <Modal\r\n          title=\"Thanh Toán\"\r\n          visible={this.props.showModel}\r\n          onOk={this.handleSubmit}\r\n          onCancel={this.props.onClose}>\r\n          <Form.Item>\r\n            {getFieldDecorator('idMember', {\r\n              rules: [{required: true, message: 'Chọn Thành viên'}],\r\n            })(\r\n              <Select\r\n                style={{width: '100%'}}\r\n                showSearch\r\n                placeholder=\"Chọn thành viên\"\r\n                optionFilterProp=\"children\"\r\n                onSearch={this.onSearch}>\r\n                {this.props.members && this.props.members.map(member => (\r\n                  <Option key={member.id} value={member.id}>{member.fullName}</Option>\r\n                ))\r\n                }\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('price', {\r\n              rules: [{required: true, message: 'Nhập số'}],\r\n            })(\r\n              <InputNumber\r\n                style={{width: '100%'}}\r\n                placeholder=\"Số tiền\"\r\n                formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}/>\r\n            )}\r\n          </Form.Item>\r\n        </Modal>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nconst FormPayCreate = Form.create()(FormPay);\r\nexport default connect(\r\n  mapStateToProps,\r\n)(FormPayCreate);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DatePicker, Button, Col, Form, Card, Icon, Popconfirm, Row, Select, Table } from 'antd';\r\nimport { deleteDebt, deleteHistory, getAgency, getListDebt, getMemberOf } from '../service/MemberService'\r\nimport FormCreateCreate from \"../component/debt/FormCreate\";\r\nimport Divider from \"antd/es/divider\";\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport FormPayCreate from \"../component/debt/FormPay\";\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nconst { Column } = Table;\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat = 'DD-MM-YYYY';\r\nconst { Option } = Select;\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    agencies: [],\r\n    members: [],\r\n    showModel: false,\r\n    debts: [],\r\n    rest: 0,\r\n    totalDebt: 0,\r\n    totalHistory: 0,\r\n    historiesTotal: [],\r\n    modalPay: false,\r\n    condition: null,\r\n    flgPrint: false\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    getAgency()\r\n      .then(response => {\r\n        this.setState({ agencies: response.data })\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        await this.setState({ condition: values });\r\n        this.loadDebt();\r\n      }\r\n    });\r\n  };\r\n\r\n  loadDebt() {\r\n    if (!this.state.condition) return;\r\n    getListDebt(this.state.condition)\r\n      .then((response) => {\r\n        this.setState({\r\n          debts: response.data.debts,\r\n          totalHistory: response.data.totalHistory,\r\n          totalDebt: response.data.totalDebt,\r\n          rest: response.data.rest,\r\n          historiesTotal: response.data.historiesTotal\r\n        });\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  showModel = () => {\r\n    this.setState({ showModel: true })\r\n  };\r\n  onCloseModal = () => {\r\n    this.setState({ showModel: false })\r\n  };\r\n  showModalPay = () => {\r\n    this.setState({ modalPay: true })\r\n  };\r\n  onCloseModalPay = () => {\r\n    this.setState({ modalPay: false })\r\n  };\r\n  handleDeleteHistory = (id) => {\r\n    deleteHistory(id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.loadDebt();\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  handleDeleteDebt = (id) => {\r\n    deleteDebt(id).then((response) => {\r\n      console.log(response);\r\n      this.loadDebt()\r\n    })\r\n  };\r\n\r\n  onChangeAgency = (value, { props }) => {\r\n    getMemberOf(value)\r\n      .then((response) => {\r\n        this.setState({ members: response.data })\r\n      })\r\n  };\r\n\r\n  beforPrint = () => {\r\n    console.log(\"aaa\")\r\n    this.setState({ flgPrint: true })\r\n  }\r\n\r\n  afterPrint = () => {\r\n    this.setState({ flgPrint: false })\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <div style={{ margin: 30 }}>\r\n          <Row>\r\n            <Col span={23}>\r\n              <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                <Form.Item>\r\n                  {getFieldDecorator('agencyId', {})(\r\n                    <Select\r\n                      showSearch\r\n                      style={{ width: 200 }}\r\n                      placeholder=\"Chọn đại lý\"\r\n                      optionFilterProp=\"children\"\r\n                      onChange={this.onChangeAgency}\r\n                      filterOption={(input, option) =>\r\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                      }>\r\n                      {\r\n                        this.state.agencies.map(member => (\r\n                          <Option key={member.id} value={member.id}>{member.fullName}</Option>\r\n                        ))\r\n                      }\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator('memberId', {})(\r\n                    <Select\r\n                      showSearch\r\n                      style={{ width: 200 }}\r\n                      placeholder=\"Chọn thành viên\"\r\n                    >\r\n                      {\r\n                        this.state.members && this.state.members.map(member => (\r\n                          <Option key={member.id} value={member.id}>{member.fullName}</Option>\r\n                        ))\r\n                      }\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator('rangeDate', {})(\r\n                    <RangePicker format={dateFormat} />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button type='primary' icon='search' htmlType='submit' />\r\n                </Form.Item>\r\n              </Form>\r\n            </Col>\r\n            <Col span={1}>\r\n              <ReactToPrint\r\n                trigger={() => <Button icon=\"printer\"></Button>}\r\n                content={() => this.componentRef}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Button icon='plus' onClick={this.showModel} style={{ marginRight: 10 }}>Lấy Hàng</Button>\r\n          <Button icon='plus' onClick={this.showModalPay}>Thanh Toán</Button>\r\n        </div>\r\n        <Divider />\r\n        <div style={{ margin: 10 }}>\r\n          <Row gutter={8}>\r\n            <Col className=\"gutter-row\" span={10}>\r\n              <Row>\r\n                <Col span={12}><h4>Lấy Hàng</h4></Col>\r\n              </Row>\r\n              <Table dataSource={this.state.debts} rowKey=\"id\" bordered={true} pagination={false}>\r\n                <Column title=\"Ngày Lấy\" dataIndex=\"createdDate\" key=\"createdDate\"\r\n                  render={createDate => (<span>{moment(createDate).format(dateFormat)}</span>)} />\r\n                <Column title=\"Số tiền\" dataIndex=\"price\" key=\"price\"\r\n                  render={price => (\r\n                    <NumberFormat displayType={'text'} thousandSeparator={true} value={price} />)} />\r\n                <Column title=\"Ghi Chú\" dataIndex=\"note\" key=\"note\" />\r\n                <Column title=\"Tuỳ chọn\" dataIndex=\"action\" key=\"action\"\r\n                  render={(text, record) => (\r\n                    this.state.debts.length >= 1 ? (\r\n                      <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDeleteDebt(record.id)}>\r\n                        <Icon type=\"delete\" />\r\n                      </Popconfirm>\r\n                    ) : null\r\n                  )} />\r\n              </Table>\r\n            </Col>\r\n            <Col className=\"gutter-row\" span={8}>\r\n              <Row>\r\n                <Col span={12}><h4>Thanh Toán</h4></Col>\r\n              </Row>\r\n              <Table dataSource={this.state.historiesTotal} rowKey=\"id\" bordered={true} pagination={false}>\r\n                <Column title=\"Ngày thanh toán\" dataIndex=\"createdDate\" key=\"createdDate\"\r\n                  render={date => (<span>{moment(date).format(dateFormat)}</span>)} />\r\n                <Column title=\"Số tiền\" dataIndex=\"price\" key=\"price\"\r\n                  render={price => (\r\n                    <NumberFormat displayType={'text'} thousandSeparator={true} value={price} />)} />/>\r\n                <Column title=\"Tuỳ chọn\" dataIndex=\"action\" key=\"action\"\r\n                  render={(text, record) => (\r\n                    this.state.historiesTotal.length >= 1 ? (\r\n                      <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDeleteHistory(record.id)}>\r\n                        <Icon type=\"delete\" />\r\n                      </Popconfirm>\r\n                    ) : null\r\n                  )} />\r\n              </Table>\r\n            </Col>\r\n            <Col className=\"gutter-row\" span={6}>\r\n              <h4>Thống kê</h4>\r\n              <Card size={'small'}>\r\n                <Row>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>Nợ:</Col>\r\n                  <Col span={12}>\r\n                    <div style={{ textAlign: 'right' }}>\r\n                      <NumberFormat\r\n                        displayType={'text'}\r\n                        thousandSeparator={true}\r\n                        value={this.state.totalDebt} />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>Thanh toán:</Col>\r\n                  <Col span={12}>\r\n                    <div style={{ textAlign: 'right' }}>\r\n                      <NumberFormat\r\n                        displayType={'text'}\r\n                        thousandSeparator={true}\r\n                        value={this.state.totalHistory} />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Divider />\r\n                  <Col span={12} style={{ textAlign: 'right' }}>Còn nợ lại:</Col>\r\n                  <Col span={12}>\r\n                    <div style={{ textAlign: 'right' }}>\r\n                      <NumberFormat\r\n                        displayType={'text'}\r\n                        thousandSeparator={true}\r\n                        value={this.state.rest} />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <FormCreateCreate\r\n          showModel={this.state.showModel}\r\n          onClose={this.onCloseModal}\r\n          members={this.state.members} />\r\n        <FormPayCreate\r\n          showModel={this.state.modalPay}\r\n          onClose={this.onCloseModalPay}\r\n          members={this.state.members} />\r\n        <div style={{ display: this.state.flgPrint ? \"show\" : \"none\" }}>\r\n          <div style={{ margin: 10 }} ref={el => (this.componentRef = el)}>\r\n            <Row gutter={8}>\r\n              <Col className=\"gutter-row\" span={10}>\r\n                <Row>\r\n                  <Col span={12}><h4>Lấy Hàng</h4></Col>\r\n                </Row>\r\n                <Table dataSource={this.state.debts} rowKey=\"id\" bordered={true} pagination={false}>\r\n                  <Column title=\"Ngày Lấy\" dataIndex=\"createdDate\" key=\"createdDate\"\r\n                    render={createDate => (<span>{moment(createDate).format(dateFormat)}</span>)} />\r\n                  <Column title=\"Số tiền\" dataIndex=\"price\" key=\"price\"\r\n                    render={price => (\r\n                      <NumberFormat displayType={'text'} thousandSeparator={true} value={price} />)} />\r\n                  <Column title=\"Ghi Chú\" dataIndex=\"note\" key=\"note\" />\r\n                </Table>\r\n              </Col>\r\n              <Col className=\"gutter-row\" span={8}>\r\n                <Row>\r\n                  <Col span={12}><h4>Thanh Toán</h4></Col>\r\n                </Row>\r\n                <Table dataSource={this.state.historiesTotal} rowKey=\"id\" bordered={true} pagination={false}>\r\n                  <Column title=\"Ngày thanh toán\" dataIndex=\"createdDate\" key=\"createdDate\"\r\n                    render={date => (<span>{moment(date).format(dateFormat)}</span>)} />\r\n                  <Column title=\"Số tiền\" dataIndex=\"price\" key=\"price\"\r\n                    render={price => (\r\n                      <NumberFormat displayType={'text'} thousandSeparator={true} value={price} />)} />/>\r\n                </Table>\r\n              </Col>\r\n              <Col className=\"gutter-row\" span={6}>\r\n                <h4>Thống kê</h4>\r\n                <Card size={'small'}>\r\n                  <Row>\r\n                    <Col span={12} style={{ textAlign: 'right' }}>Nợ:</Col>\r\n                    <Col span={12}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <NumberFormat\r\n                          displayType={'text'}\r\n                          thousandSeparator={true}\r\n                          value={this.state.totalDebt} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={12} style={{ textAlign: 'right' }}>Thanh toán:</Col>\r\n                    <Col span={12}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <NumberFormat\r\n                          displayType={'text'}\r\n                          thousandSeparator={true}\r\n                          value={this.state.totalHistory} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Divider />\r\n                    <Col span={12} style={{ textAlign: 'right' }}>Còn nợ lại:</Col>\r\n                    <Col span={12}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <NumberFormat\r\n                          displayType={'text'}\r\n                          thousandSeparator={true}\r\n                          value={this.state.rest} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Form.create()(Home));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button, Card, Col, Form, Icon, Input, Row, Select, Table, Checkbox, Tag, Popconfirm} from 'antd';\r\nimport moment from 'moment'\r\nimport {createUser, getAgency, getAllMember, deleteMember} from \"../service/MemberService\";\r\n\r\nclass Member extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agencies: [],\r\n      columns: [\r\n        {\r\n          title: 'Tên thanh viên',\r\n          dataIndex: 'fullName',\r\n          key: 'fullName',\r\n        },\r\n        {\r\n          title: 'Địa chỉ',\r\n          dataIndex: 'address',\r\n          key: 'address',\r\n        },\r\n        {\r\n          title: 'Là đại lý',\r\n          dataIndex: 'agency',\r\n          key: 'agency',\r\n          render: text => (\r\n            <Tag color={text ? 'geekblue' : 'green'} key={text}>\r\n              {text ? 'Đại lý' : 'Thành viên'}\r\n            </Tag>),\r\n        },\r\n        {\r\n          title: 'Ngày tạo',\r\n          dataIndex: 'createdDate',\r\n          key: 'createdDate',\r\n          render: text => (<div>{moment(text).format(\"DD-MM-YYYY\")}</div>),\r\n        },\r\n        {\r\n          title: 'Tuỳ chọn',\r\n          dataIndex: 'action',\r\n          key: 'action',\r\n          render: (text, record) =>\r\n            this.state.members.length >= 1 ? (\r\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.id)}>\r\n                <a>Delete</a>\r\n              </Popconfirm>\r\n            ) : null,\r\n        },\r\n      ],\r\n      members: null\r\n    };\r\n  }\r\n\r\n  handleDelete(idMember) {\r\n    deleteMember(idMember).then(() => {\r\n      this.loadMember()\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    getAgency()\r\n      .then(response => {\r\n        this.setState({agencies: response.data})\r\n      })\r\n      .catch(error => {\r\n\r\n      });\r\n    this.loadMember()\r\n  }\r\n\r\n  createMember = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        createUser(values)\r\n          .then(() => {\r\n            this.loadMember()\r\n          })\r\n      }\r\n    });\r\n  };\r\n\r\n  loadMember = () => {\r\n    getAllMember()\r\n      .then((response) => {\r\n        this.setState({members: response.data})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <div style={{margin: 10}}>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item>\r\n                  {getFieldDecorator('fullName', {\r\n                    rules: [{required: true, message: 'Nhập tên Thành Viên'}],\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                      placeholder=\"Nhập tên Thành Viên\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator('agency', {\r\n                    valuePropName: 'checked',\r\n                    initialValue: false,})(\r\n                    <Checkbox>Là đại lý</Checkbox>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator('memberOf')(\r\n                    <Select\r\n                      showSearch\r\n                      placeholder=\"Thuộc Thành viên\"\r\n                    >\r\n                      <Select.Option key={0} value={null}>Null</Select.Option>\r\n                      {this.state.agencies && this.state.agencies.map(member => (\r\n                        <Select.Option key={member.id} value={member.id}>{member.fullName}</Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator('address')(\r\n                    <Input\r\n                      type=\"address\"\r\n                      placeholder=\"Địa chỉ\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator('phone')(<Input placeholder=\"Số điện thoại\"/>)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" onClick={this.createMember}>\r\n                    Tạo\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n          <Col span={16}>\r\n            <Table columns={this.state.columns} dataSource={this.state.members} rowKey={'id'} bordered={true}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Form.create()(Member));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Card, Col, DatePicker, Divider, Form, Row, Select, Table } from \"antd\";\r\nimport { getAgency, statisticalSearch } from \"../service/MemberService\";\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat = 'DD-MM-YYYY';\r\n\r\nclass Statistical extends Component {\r\n\r\n  state = {\r\n    agencies: [],\r\n    dataSource: null,\r\n    totalDebt: 0,\r\n    totalHistory: 0,\r\n    totalRest: 0,\r\n    columns: [\r\n      {\r\n        title: \"Khách Hàng\",\r\n        dataIndex: 'fullName',\r\n        key: 'fullName'\r\n      },\r\n      {\r\n        title: \"Doanh thu\",\r\n        dataIndex: 'sumDebt',\r\n        key: 'sumDebt'\r\n      },\r\n      {\r\n        title: \"Tổng thu\",\r\n        dataIndex: 'sumHistory',\r\n        key: 'sumHistory'\r\n      }\r\n    ]\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    getAgency()\r\n      .then(response => {\r\n        this.setState({ agencies: response.data })\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      statisticalSearch(values)\r\n        .then((response) => {\r\n          this.setState({\r\n            dataSource: response.data.member,\r\n            totalHistory: response.data.totalHistory,\r\n            totalDebt: response.data.totalDebt,\r\n            totalRest: response.data.totalRest\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Row style={{ margin: 10 }}>\r\n          <Col span={23}>\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n              <Form.Item>\r\n                {getFieldDecorator('agencyId', {})(\r\n                  <Select\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Chọn đại lý\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={this.onChangeAgency}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                    }>\r\n                    {\r\n                      this.state.agencies.map(member => (\r\n                        <Option key={member.id} value={member.id}>{member.fullName}</Option>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator('rangeDate', {})(\r\n                  <RangePicker format={dateFormat} />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type='primary' icon='search' htmlType='submit' />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col span={1}>\r\n            <ReactToPrint\r\n              trigger={() => <Button icon=\"printer\"></Button>}\r\n              content={() => this.componentRef}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Divider />\r\n        <div ref={el => (this.componentRef = el)}>\r\n          <Row gutter={16} style={{ margin: 10 }}>\r\n            <Col span={16} >\r\n              <Table\r\n                bordered\r\n                dataSource={this.state.dataSource}\r\n                columns={this.state.columns}\r\n                rowKey={'id'}\r\n                pagination={false}/>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Card>\r\n                <Row>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>Tổng doanh số:</Col>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>{this.state.totalDebt}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>Tổng doanh thu:</Col>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>{this.state.totalHistory}</Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>Tổng công nợ:</Col>\r\n                  <Col span={12} style={{ textAlign: 'right' }}>{this.state.totalRest}</Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Form.create()(Statistical));","import React, {Suspense} from 'react';\r\nimport './assets/css/App.css';\r\nimport {Layout, Menu, Spin} from 'antd';\r\nimport {Link, Route} from 'react-router-dom';\r\nimport Home from \"./view/Home\";\r\nimport Member from \"./view/Member\";\r\nimport Statistical from \"./view/Statistical\";\r\n\r\nconst {Header, Content} = Layout;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    current: 'home',\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  loading = () => {\r\n    return (<Spin/>);\r\n  };\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{width: '100%', height: '100%'}}>\r\n        <Layout>\r\n          <Header style={{background: '#fff', margin: '10px 16px 0px 16px', paddingLeft: 10}}>\r\n            <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n              <Menu.Item key=\"home\">\r\n                <Link to=\"/\">\r\n                  <span>Trang chủ</span>\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"statistical\">\r\n                <Link to=\"/statistical\">\r\n                  <span>Đại lý</span>\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"member\">\r\n                <Link to=\"/member\">\r\n                  <span>Thành viên</span>\r\n                </Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: '10px 16px 0px 16px',\r\n              background: '#fff'\r\n            }}>\r\n            <Suspense fallback={this.loading}>\r\n              <Route exact path=\"/\" name=\"home\" render={props => <Home {...props}/>}/>\r\n              <Route exact path=\"/member\" name=\"member\" render={props => <Member {...props}/>}/>\r\n              <Route exact path=\"/statistical\" name=\"statistical\" render={props => <Statistical {...props}/>}/>\r\n            </Suspense>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const ADD_ARTICLE = \"ADD_ARTICLE\";","import {ADD_ARTICLE} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  articles: []\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_ARTICLE) {\r\n    return Object.assign({}, state, {\r\n      articles: state.articles.concat(action.payload)\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App/>\r\n    </Router>\r\n  </Provider>\r\n  , document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}